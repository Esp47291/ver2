import socket

def read_html_file(filename):
    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –∏–∑ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–∏ (–±–µ–∑ templates/)
    with open(filename, 'r', encoding='utf-8') as file:
        return file.read()

def handle_request(client_socket):
    try:
        request = client_socket.recv(1024).decode('utf-8')
        print("–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å:\n", request)

        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ GET-–∑–∞–ø—Ä–æ—Å—ã (–ø–æ —É—Å–ª–æ–≤–∏—é)
        if request.startswith("GET"):
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º contacts.html
            html_content = read_html_file('contacts.html')

            response = (
                "HTTP/1.1 200 OK\r\n"
                "Content-Type: text/html; charset=utf-8\r\n"
                f"Content-Length: {len(html_content)}\r\n"
                "Connection: close\r\n"
                "\r\n"
                + html_content
            )
        else:
            # –î–ª—è –¥—Ä—É–≥–∏—Ö –º–µ—Ç–æ–¥–æ–≤ ‚Äî –æ—à–∏–±–∫–∞ –∏–ª–∏ –∑–∞–≥–ª—É—à–∫–∞
            response = (
                "HTTP/1.1 405 Method Not Allowed\r\n"
                "Content-Length: 0\r\n"
                "Connection: close\r\n"
                "\r\n"
            )

        client_socket.sendall(response.encode('utf-8'))
    except FileNotFoundError:
        # –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω
        error_page = "<h1>404: –§–∞–π–ª contacts.html –Ω–µ –Ω–∞–π–¥–µ–Ω</h1>"
        response = (
            "HTTP/1.1 404 Not Found\r\n"
            "Content-Type: text/html; charset=utf-8\r\n"
            f"Content-Length: {len(error_page)}\r\n"
            "Connection: close\r\n"
            "\r\n"
            + error_page
        )
        client_socket.sendall(response.encode('utf-8'))
    except Exception as e:
        # –õ—é–±–∞—è –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞
        print(f"–û—à–∏–±–∫–∞: {e}")
        error_page = "<h1>500: –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞</h1>"
        response = (
            "HTTP/1.1 500 Internal Server Error\r\n"
            "Content-Type: text/html; charset=utf-8\r\n"
            f"Content-Length: {len(error_page)}\r\n"
            "Connection: close\r\n"
            "\r\n"
            + error_page
        )
        client_socket.sendall(response.encode('utf-8'))
    finally:
        client_socket.close()

def start_server(host='localhost', port=8080):
    server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server_socket.bind((host, port))
    server_socket.listen(5)
    print(f"‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://{host}:{port}")

    try:
        while True:
            client_socket, addr = server_socket.accept()
            print(f"üåê –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç {addr}")
            handle_request(client_socket)
    except KeyboardInterrupt:
        print("\nüõë –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
    finally:
        server_socket.close()

if __name__ == '__main__':
    start_server()